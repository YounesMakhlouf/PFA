// Mocks generated by Mockito 5.4.6 from annotations
// in pfa/test/services/child_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:pfa/models/user.dart' as _i4;
import 'package:pfa/repositories/child_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChildRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChildRepository extends _i1.Mock implements _i2.ChildRepository {
  MockChildRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Child>> getChildProfilesForParent() =>
      (super.noSuchMethod(
        Invocation.method(
          #getChildProfilesForParent,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Child>>.value(<_i4.Child>[]),
      ) as _i3.Future<List<_i4.Child>>);

  @override
  _i3.Future<_i4.Child?> getChildProfileById(String? childId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChildProfileById,
          [childId],
        ),
        returnValue: _i3.Future<_i4.Child?>.value(),
      ) as _i3.Future<_i4.Child?>);

  @override
  _i3.Future<_i4.Child?> createChildProfile({
    required String? firstName,
    String? lastName,
    DateTime? birthdate,
    String? avatarUrl,
    Set<_i4.SpecialCondition>? specialConditions = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChildProfile,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #birthdate: birthdate,
            #avatarUrl: avatarUrl,
            #specialConditions: specialConditions,
          },
        ),
        returnValue: _i3.Future<_i4.Child?>.value(),
      ) as _i3.Future<_i4.Child?>);

  @override
  _i3.Future<bool> updateChildProfile(_i4.Child? updatedChild) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChildProfile,
          [updatedChild],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteChildProfile(String? childId) => (super.noSuchMethod(
        Invocation.method(
          #deleteChildProfile,
          [childId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<String>> getEducatorsForChild(String? childId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEducatorsForChild,
          [childId],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<String> addEducatorByEmail(
    String? childId,
    String? educatorEmail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addEducatorByEmail,
          [
            childId,
            educatorEmail,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #addEducatorByEmail,
            [
              childId,
              educatorEmail,
            ],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> removeEducatorByEmail(
    String? childId,
    String? educatorEmail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeEducatorByEmail,
          [
            childId,
            educatorEmail,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #removeEducatorByEmail,
            [
              childId,
              educatorEmail,
            ],
          ),
        )),
      ) as _i3.Future<String>);
}
